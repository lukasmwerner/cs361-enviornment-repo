// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func AddItem() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n\t\t  form {\n\t\t    max-width: 600px;\n\t\t    margin: 20px auto;\n\t\t    padding: 20px;\n\t\t    border: 1px solid #ddd;\n\t\t    border-radius: 5px;\n\t\t    background-color: #f9f9f9;\n\t\t  }\n\n\t\t  h1 {\n\t\t    margin-top: 0;\n\t\t    color: #333;\n\t\t    border-bottom: 1px solid #eee;\n\t\t    padding-bottom: 10px;\n\t\t  }\n\n\t\t  input[type=\"text\"] {\n\t\t    width: 100%;\n\t\t    padding: 8px;\n\t\t    margin-bottom: 15px;\n\t\t    border: 1px solid #ccc;\n\t\t    border-radius: 4px;\n\t\t    font-size: 16px;\n\t\t  }\n\n\t\t  textarea {\n\t\t    width: 100%;\n\t\t    padding: 8px;\n\t\t    margin-bottom: 15px;\n\t\t    border: 1px solid #ccc;\n\t\t    border-radius: 4px;\n\t\t    font-size: 14px;\n\t\t  }\n\n\t\t  button {\n\t\t    padding: 8px 16px;\n\t\t    background-color: #4CAF50;\n\t\t    color: white;\n\t\t    border: none;\n\t\t    border-radius: 4px;\n\t\t    cursor: pointer;\n\t\t    font-size: 16px;\n\t\t  }\n\n\t\t  button:hover {\n\t\t    background-color: #45a049;\n\t\t  }\n\n\t\t  .back-button {\n\t\t    margin-bottom: 15px;\n\t\t    display: inline-block;\n\t\t  }\n\n\t\t  .format-tips {\n\t\t    background-color: #f0f8ff;\n\t\t    padding: 10px;\n\t\t    border-left: 3px solid #007bff;\n\t\t    margin-bottom: 15px;\n\t\t    font-size: 14px;\n\t\t  }\n\n\t\t  .examples-link {\n\t\t    color: #007bff;\n\t\t    text-decoration: underline;\n\t\t    cursor: pointer;\n\t\t  }\n          .format-example {\n              white-space: pre-wrap;\n              word-break: break-word;\n              font-family: monospace;\n              overflow-x: auto;\n              padding: 5px;\n              background-color: #f8f8f8;\n              border-radius: 3px;\n          }\n\t\t</style> <button><a href=\"#\" onclick=\"history.back()\">back</a></button><form method=\"POST\" onsubmit=\"return confirm(&#39;Adding an item requires manual entry of all metadata. Continue?&#39;)\"><h1>Add Item</h1><input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\"><div class=\"format-tips\"><b>Formatting Tips:</b> Try different formats in your metadata to organize information better. <span class=\"examples-link\" onclick=\"toggleExamples()\">Show examples</span><div id=\"format-examples\" style=\"display: none; margin-top: 10px;\"><strong>Example 1:</strong><div class=\"format-example\">Title: Dark Side of the Moon<br>Artist: Pink Floyd<br>Year: 1973<br>Condition: Excellent<br>Notes: Original pressing<br></div><strong>Example 2:</strong><div class=\"format-example\">Purchased:  oregon coffee and tea<br>Cost: $2.50 per oz<br>Flavor profile: bold and rich<br>Temperature: 78Â°C<br></div></div></div><textarea id=\"metadata\" name=\"metadata\" cols=\"50\" rows=\"10\" placeholder=\"Anything can go in here...\nValue: $10\nArtist: Claire Rosinkranz\nGenre: Pop\"></textarea> <button>Add Item</button><div style=\"margin-bottom: 15px; color: #555;\"><span style=\"color: #aaa;\">Step 1: Browse Collection</span> &rarr; <strong>Step 2: Add/Edit Items</strong></div></form><script>\n        function toggleExamples() {\n          const examples = document.getElementById('format-examples');\n          const link = document.querySelector('.examples-link');\n          if (examples.style.display === 'none') {\n            examples.style.display = 'block';\n            link.textContent = 'Hide examples';\n          } else {\n            examples.style.display = 'none';\n            link.textContent = 'Show examples';\n          }\n        }\n        </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Page("Add Item").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
